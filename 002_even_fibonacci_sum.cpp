/*
https://projecteuler.net/problem=2
Even Fibonacci numbers
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.

Helped: http://www.programiz.com/cpp-programming/examples/fibonacci-series
*/

#include <iostream>

using namespace std;

int main (int argc, char *argv[]) {

	unsigned long sum = 0;

	int n = 4000000;
	int firstTerm = 1;
	int secondTerm = 1;
	int nextTerm = 0;

	while (nextTerm < n) {

		nextTerm = firstTerm + secondTerm;
		firstTerm = secondTerm;
		secondTerm = nextTerm;

		if (firstTerm%2 == 0) {
			sum += firstTerm;
		}
	}

	cout << "Sum of even fibonacci numbers up to 4M: " << sum << endl;

	cin.get();

	return 0;
}
